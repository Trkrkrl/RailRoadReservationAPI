// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RailwayReservation.DataAccess.Concrete.Context;

#nullable disable

namespace RailwayReservation.DataAccess.Migrations
{
    [DbContext(typeof(EfCoreDbContext))]
    partial class EfCoreDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RailwayReservation.Entities.Concrete.Reservation", b =>
                {
                    b.Property<int>("ReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ReservationId"));

                    b.Property<bool>("IsDifferentVagonsAcceptable")
                        .HasColumnType("boolean");

                    b.Property<int>("NumberOfPassengers")
                        .HasColumnType("integer");

                    b.Property<int>("TrainId")
                        .HasColumnType("integer");

                    b.HasKey("ReservationId");

                    b.HasIndex("TrainId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("RailwayReservation.Entities.Concrete.Train", b =>
                {
                    b.Property<int>("TrainId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TrainId"));

                    b.Property<string>("TrainName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("TrainId");

                    b.ToTable("Trains");
                });

            modelBuilder.Entity("RailwayReservation.Entities.Concrete.Vagon", b =>
                {
                    b.Property<int>("VagonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("VagonId"));

                    b.Property<int>("Capacity")
                        .HasColumnType("integer");

                    b.Property<int>("EmptySeats")
                        .HasColumnType("integer");

                    b.Property<int>("NumberOfTakenSeats")
                        .HasColumnType("integer");

                    b.Property<int?>("SeatsJustGiven")
                        .HasColumnType("integer");

                    b.Property<int>("TrainId")
                        .HasColumnType("integer");

                    b.Property<string>("VagonName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("VagonId");

                    b.HasIndex("TrainId");

                    b.ToTable("Vagons");
                });

            modelBuilder.Entity("RailwayReservation.Entities.Concrete.Reservation", b =>
                {
                    b.HasOne("RailwayReservation.Entities.Concrete.Train", "Train")
                        .WithMany()
                        .HasForeignKey("TrainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Train");
                });

            modelBuilder.Entity("RailwayReservation.Entities.Concrete.Vagon", b =>
                {
                    b.HasOne("RailwayReservation.Entities.Concrete.Train", null)
                        .WithMany("VagonList")
                        .HasForeignKey("TrainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RailwayReservation.Entities.Concrete.Train", b =>
                {
                    b.Navigation("VagonList");
                });
#pragma warning restore 612, 618
        }
    }
}
